{"version":3,"file":"vendors-node_modules_react-native-video_Video_js.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/deprecated-react-native-prop-types/node_modules/@react-native/normalize-color/index.js","webpack:///./node_modules/react-native-video/DRMType.js","webpack:///./node_modules/react-native-video/FilterType.js","webpack:///./node_modules/react-native-video/TextTrackType.js","webpack:///./node_modules/react-native-video/Video.js","webpack:///./node_modules/react-native-video/VideoResizeMode.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedColorPropType.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedEdgeInsetsPropType.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedImagePropType.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedImageSourcePropType.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedImageStylePropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedLayoutPropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedPointPropType.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedShadowPropTypesIOS.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedStyleSheetPropType.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedTextInputPropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedTextPropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedTextStylePropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedTransformPropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedViewAccessibility.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedViewPropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/DeprecatedViewStylePropTypes.js","webpack:///./node_modules/deprecated-react-native-prop-types/deprecatedCreateStrictShapeTypeChecker.js","webpack:///./node_modules/deprecated-react-native-prop-types/index.js","webpack:///./node_modules/keymirror/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @noflow\n */\n\n/* eslint no-bitwise: 0 */\n\n'use strict';\n\nfunction normalizeColor(color) {\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  const matchers = getMatchers();\n  let match;\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color))) {\n    return parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  const colorFromKeyword = normalizeKeyword(color);\n  if (colorFromKeyword != null) {\n    return colorFromKeyword;\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) | // b\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    // rgba(R G B / A) notation\n    if (match[6] !== undefined) {\n      return (\n        ((parse255(match[6]) << 24) | // r\n          (parse255(match[7]) << 16) | // g\n          (parse255(match[8]) << 8) | // b\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // rgba(R, G, B, A) notation\n    return (\n      ((parse255(match[2]) << 24) | // r\n        (parse255(match[3]) << 16) | // g\n        (parse255(match[4]) << 8) | // b\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16,\n      ) >>> 0\n    );\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) {\n    return parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers.hex4.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16,\n      ) >>> 0\n    );\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]), // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    // hsla(H S L / A) notation\n    if (match[6] !== undefined) {\n      return (\n        (hslToRgb(\n          parse360(match[6]), // h\n          parsePercentage(match[7]), // s\n          parsePercentage(match[8]), // l\n        ) |\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // hsla(H, S, L, A) notation\n    return (\n      (hslToRgb(\n        parse360(match[2]), // h\n        parsePercentage(match[3]), // s\n        parsePercentage(match[4]), // l\n      ) |\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hwb.exec(color))) {\n    return (\n      (hwbToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // w\n        parsePercentage(match[3]), // b\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  );\n}\n\nfunction hwbToRgb(h, w, b) {\n  if (w + b >= 1) {\n    const gray = Math.round((w * 255) / (w + b));\n\n    return (gray << 24) | (gray << 16) | (gray << 8);\n  }\n\n  const red = hue2rgb(0, 1, h + 1 / 3) * (1 - w - b) + w;\n  const green = hue2rgb(0, 1, h) * (1 - w - b) + w;\n  const blue = hue2rgb(0, 1, h - 1 / 3) * (1 - w - b) + w;\n\n  return (\n    (Math.round(red * 255) << 24) |\n    (Math.round(green * 255) << 16) |\n    (Math.round(blue * 255) << 8)\n  );\n}\n\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...args) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,?\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nfunction callWithSlashSeparator(...args) {\n  return (\n    '\\\\(\\\\s*(' +\n    args.slice(0, args.length - 1).join(')\\\\s*,?\\\\s*(') +\n    ')\\\\s*/\\\\s*(' +\n    args[args.length - 1] +\n    ')\\\\s*\\\\)'\n  );\n}\n\nfunction commaSeparatedCall(...args) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nlet cachedMatchers;\n\nfunction getMatchers() {\n  if (cachedMatchers === undefined) {\n    cachedMatchers = {\n      rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n      rgba: new RegExp(\n        'rgba(' +\n          commaSeparatedCall(NUMBER, NUMBER, NUMBER, NUMBER) +\n          '|' +\n          callWithSlashSeparator(NUMBER, NUMBER, NUMBER, NUMBER) +\n          ')',\n      ),\n      hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n      hsla: new RegExp(\n        'hsla(' +\n          commaSeparatedCall(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n          '|' +\n          callWithSlashSeparator(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n          ')',\n      ),\n      hwb: new RegExp('hwb' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n      hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#([0-9a-fA-F]{6})$/,\n      hex8: /^#([0-9a-fA-F]{8})$/,\n    };\n  }\n  return cachedMatchers;\n}\n\nfunction parse255(str) {\n  const int = parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str) {\n  const int = parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str) {\n  const num = parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  const int = parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nfunction normalizeKeyword(name) {\n  // prettier-ignore\n  switch (name) {\n    case 'transparent': return 0x00000000;\n    // http://www.w3.org/TR/css3-color/#svg-color\n    case 'aliceblue': return 0xf0f8ffff;\n    case 'antiquewhite': return 0xfaebd7ff;\n    case 'aqua': return 0x00ffffff;\n    case 'aquamarine': return 0x7fffd4ff;\n    case 'azure': return 0xf0ffffff;\n    case 'beige': return 0xf5f5dcff;\n    case 'bisque': return 0xffe4c4ff;\n    case 'black': return 0x000000ff;\n    case 'blanchedalmond': return 0xffebcdff;\n    case 'blue': return 0x0000ffff;\n    case 'blueviolet': return 0x8a2be2ff;\n    case 'brown': return 0xa52a2aff;\n    case 'burlywood': return 0xdeb887ff;\n    case 'burntsienna': return 0xea7e5dff;\n    case 'cadetblue': return 0x5f9ea0ff;\n    case 'chartreuse': return 0x7fff00ff;\n    case 'chocolate': return 0xd2691eff;\n    case 'coral': return 0xff7f50ff;\n    case 'cornflowerblue': return 0x6495edff;\n    case 'cornsilk': return 0xfff8dcff;\n    case 'crimson': return 0xdc143cff;\n    case 'cyan': return 0x00ffffff;\n    case 'darkblue': return 0x00008bff;\n    case 'darkcyan': return 0x008b8bff;\n    case 'darkgoldenrod': return 0xb8860bff;\n    case 'darkgray': return 0xa9a9a9ff;\n    case 'darkgreen': return 0x006400ff;\n    case 'darkgrey': return 0xa9a9a9ff;\n    case 'darkkhaki': return 0xbdb76bff;\n    case 'darkmagenta': return 0x8b008bff;\n    case 'darkolivegreen': return 0x556b2fff;\n    case 'darkorange': return 0xff8c00ff;\n    case 'darkorchid': return 0x9932ccff;\n    case 'darkred': return 0x8b0000ff;\n    case 'darksalmon': return 0xe9967aff;\n    case 'darkseagreen': return 0x8fbc8fff;\n    case 'darkslateblue': return 0x483d8bff;\n    case 'darkslategray': return 0x2f4f4fff;\n    case 'darkslategrey': return 0x2f4f4fff;\n    case 'darkturquoise': return 0x00ced1ff;\n    case 'darkviolet': return 0x9400d3ff;\n    case 'deeppink': return 0xff1493ff;\n    case 'deepskyblue': return 0x00bfffff;\n    case 'dimgray': return 0x696969ff;\n    case 'dimgrey': return 0x696969ff;\n    case 'dodgerblue': return 0x1e90ffff;\n    case 'firebrick': return 0xb22222ff;\n    case 'floralwhite': return 0xfffaf0ff;\n    case 'forestgreen': return 0x228b22ff;\n    case 'fuchsia': return 0xff00ffff;\n    case 'gainsboro': return 0xdcdcdcff;\n    case 'ghostwhite': return 0xf8f8ffff;\n    case 'gold': return 0xffd700ff;\n    case 'goldenrod': return 0xdaa520ff;\n    case 'gray': return 0x808080ff;\n    case 'green': return 0x008000ff;\n    case 'greenyellow': return 0xadff2fff;\n    case 'grey': return 0x808080ff;\n    case 'honeydew': return 0xf0fff0ff;\n    case 'hotpink': return 0xff69b4ff;\n    case 'indianred': return 0xcd5c5cff;\n    case 'indigo': return 0x4b0082ff;\n    case 'ivory': return 0xfffff0ff;\n    case 'khaki': return 0xf0e68cff;\n    case 'lavender': return 0xe6e6faff;\n    case 'lavenderblush': return 0xfff0f5ff;\n    case 'lawngreen': return 0x7cfc00ff;\n    case 'lemonchiffon': return 0xfffacdff;\n    case 'lightblue': return 0xadd8e6ff;\n    case 'lightcoral': return 0xf08080ff;\n    case 'lightcyan': return 0xe0ffffff;\n    case 'lightgoldenrodyellow': return 0xfafad2ff;\n    case 'lightgray': return 0xd3d3d3ff;\n    case 'lightgreen': return 0x90ee90ff;\n    case 'lightgrey': return 0xd3d3d3ff;\n    case 'lightpink': return 0xffb6c1ff;\n    case 'lightsalmon': return 0xffa07aff;\n    case 'lightseagreen': return 0x20b2aaff;\n    case 'lightskyblue': return 0x87cefaff;\n    case 'lightslategray': return 0x778899ff;\n    case 'lightslategrey': return 0x778899ff;\n    case 'lightsteelblue': return 0xb0c4deff;\n    case 'lightyellow': return 0xffffe0ff;\n    case 'lime': return 0x00ff00ff;\n    case 'limegreen': return 0x32cd32ff;\n    case 'linen': return 0xfaf0e6ff;\n    case 'magenta': return 0xff00ffff;\n    case 'maroon': return 0x800000ff;\n    case 'mediumaquamarine': return 0x66cdaaff;\n    case 'mediumblue': return 0x0000cdff;\n    case 'mediumorchid': return 0xba55d3ff;\n    case 'mediumpurple': return 0x9370dbff;\n    case 'mediumseagreen': return 0x3cb371ff;\n    case 'mediumslateblue': return 0x7b68eeff;\n    case 'mediumspringgreen': return 0x00fa9aff;\n    case 'mediumturquoise': return 0x48d1ccff;\n    case 'mediumvioletred': return 0xc71585ff;\n    case 'midnightblue': return 0x191970ff;\n    case 'mintcream': return 0xf5fffaff;\n    case 'mistyrose': return 0xffe4e1ff;\n    case 'moccasin': return 0xffe4b5ff;\n    case 'navajowhite': return 0xffdeadff;\n    case 'navy': return 0x000080ff;\n    case 'oldlace': return 0xfdf5e6ff;\n    case 'olive': return 0x808000ff;\n    case 'olivedrab': return 0x6b8e23ff;\n    case 'orange': return 0xffa500ff;\n    case 'orangered': return 0xff4500ff;\n    case 'orchid': return 0xda70d6ff;\n    case 'palegoldenrod': return 0xeee8aaff;\n    case 'palegreen': return 0x98fb98ff;\n    case 'paleturquoise': return 0xafeeeeff;\n    case 'palevioletred': return 0xdb7093ff;\n    case 'papayawhip': return 0xffefd5ff;\n    case 'peachpuff': return 0xffdab9ff;\n    case 'peru': return 0xcd853fff;\n    case 'pink': return 0xffc0cbff;\n    case 'plum': return 0xdda0ddff;\n    case 'powderblue': return 0xb0e0e6ff;\n    case 'purple': return 0x800080ff;\n    case 'rebeccapurple': return 0x663399ff;\n    case 'red': return 0xff0000ff;\n    case 'rosybrown': return 0xbc8f8fff;\n    case 'royalblue': return 0x4169e1ff;\n    case 'saddlebrown': return 0x8b4513ff;\n    case 'salmon': return 0xfa8072ff;\n    case 'sandybrown': return 0xf4a460ff;\n    case 'seagreen': return 0x2e8b57ff;\n    case 'seashell': return 0xfff5eeff;\n    case 'sienna': return 0xa0522dff;\n    case 'silver': return 0xc0c0c0ff;\n    case 'skyblue': return 0x87ceebff;\n    case 'slateblue': return 0x6a5acdff;\n    case 'slategray': return 0x708090ff;\n    case 'slategrey': return 0x708090ff;\n    case 'snow': return 0xfffafaff;\n    case 'springgreen': return 0x00ff7fff;\n    case 'steelblue': return 0x4682b4ff;\n    case 'tan': return 0xd2b48cff;\n    case 'teal': return 0x008080ff;\n    case 'thistle': return 0xd8bfd8ff;\n    case 'tomato': return 0xff6347ff;\n    case 'turquoise': return 0x40e0d0ff;\n    case 'violet': return 0xee82eeff;\n    case 'wheat': return 0xf5deb3ff;\n    case 'white': return 0xffffffff;\n    case 'whitesmoke': return 0xf5f5f5ff;\n    case 'yellow': return 0xffff00ff;\n    case 'yellowgreen': return 0x9acd32ff;\n  }\n  return null;\n}\n\nmodule.exports = normalizeColor;\n","export default {\n    WIDEVINE: 'widevine',\n    PLAYREADY: 'playready',\n    CLEARKEY: 'clearkey',\n    FAIRPLAY: 'fairplay'\n};\n","export default {\n    NONE: '',\n    INVERT: 'CIColorInvert',\n    MONOCHROME: 'CIColorMonochrome',\n    POSTERIZE: 'CIColorPosterize',\n    FALSE: 'CIFalseColor',\n    MAXIMUMCOMPONENT: 'CIMaximumComponent',\n    MINIMUMCOMPONENT: 'CIMinimumComponent',\n    CHROME: 'CIPhotoEffectChrome',\n    FADE: 'CIPhotoEffectFade',\n    INSTANT: 'CIPhotoEffectInstant',\n    MONO: 'CIPhotoEffectMono',\n    NOIR: 'CIPhotoEffectNoir',\n    PROCESS: 'CIPhotoEffectProcess',\n    TONAL: 'CIPhotoEffectTonal',\n    TRANSFER: 'CIPhotoEffectTransfer',\n    SEPIA: 'CISepiaTone',\n};\n","export default {\n  SRT: 'application/x-subrip',\n  TTML: 'application/ttml+xml',\n  VTT: 'text/vtt',\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, requireNativeComponent, NativeModules, View, Image, Platform, findNodeHandle } from 'react-native';\nimport { ViewPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport FilterType from './FilterType';\nimport DRMType from './DRMType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType, FilterType, DRMType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: !!props.poster,\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n\n  toTypeString(x) {\n    switch (typeof x) {\n      case 'object':\n        return x instanceof Date\n          ? x.toISOString()\n          : JSON.stringify(x); // object, null\n      case 'undefined':\n        return '';\n      default: // boolean, number, string\n        return x.toString();\n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (isNaN(time)) {throw new Error('Specified time is not a number');}\n\n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance,\n        },\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  save = async (options?) => {\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\n  }\n\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _hidePoster = () => {\n    if (this.state.showPoster) {\n      this.setState({ showPoster: false });\n    }\n  }\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\n    if (Platform.OS === 'windows') {\n      this._hidePoster();\n    }\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onBandwidthUpdate = (event) => {\n    if (this.props.onBandwidthUpdate) {\n      this.props.onBandwidthUpdate(event.nativeEvent);\n    }\n  };\n\n  _onSeek = (event) => {\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    if (!this.props.audioOnly) {\n      this._hidePoster();\n    }\n\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n\n  _onExternalPlaybackChange = (event) => {\n    if (this.props.onExternalPlaybackChange) {\n      this.props.onExternalPlaybackChange(event.nativeEvent);\n    }\n  }\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onPictureInPictureStatusChanged = (event) => {\n    if (this.props.onPictureInPictureStatusChanged) {\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n    }\n  };\n\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\n    if (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  _onGetLicense = (event) => {\n    if (this.props.drm && this.props.drm.getLicense instanceof Function) {\n      const data = event.nativeEvent;\n      if (data && data.spcBase64) {\n        const getLicenseOverride = this.props.drm.getLicense(data.spcBase64, data.contentId, data.licenseUrl);\n        const getLicensePromise = Promise.resolve(getLicenseOverride); // Handles both scenarios, getLicenseOverride being a promise and not.\n        getLicensePromise.then((result => {\n          if (result !== undefined) {\n            NativeModules.VideoManager.setLicenseResult(result, findNodeHandle(this._root));\n          } else {\n            NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError('Empty license result', findNodeHandle(this._root));\n          }\n        })).catch((error) => {\n          NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(error, findNodeHandle(this._root));\n        });\n      } else {\n        NativeModules.VideoManager.setLicenseError && NativeModules.VideoManager.setLicenseError(\"No spc received\", findNodeHandle(this._root));\n      }\n    }\n  }\n  getViewManagerConfig = viewManagerName => {\n    if (!NativeModules.UIManager.getViewManagerConfig) {\n      return NativeModules.UIManager[viewManagerName];\n    }\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n    const shouldCache = !source.__packager_asset;\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n\n    if (!uri) {\n      console.warn('Trying to load empty source.');\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        shouldCache,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {},\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onGetLicense: nativeProps.drm && nativeProps.drm.getLicense && this._onGetLicense,\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\n    });\n\n    const posterStyle = {\n      ...StyleSheet.absoluteFillObject,\n      resizeMode: this.props.posterResizeMode || 'contain',\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <RCTVideo\n          ref={this._assignRoot}\n          {...nativeProps}\n          style={StyleSheet.absoluteFill}\n        />\n        {this.state.showPoster && (\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\n        )}\n      </View>\n    );\n  }\n}\n\nVideo.propTypes = {\n  filter: PropTypes.oneOf([\n    FilterType.NONE,\n    FilterType.INVERT,\n    FilterType.MONOCHROME,\n    FilterType.POSTERIZE,\n    FilterType.FALSE,\n    FilterType.MAXIMUMCOMPONENT,\n    FilterType.MINIMUMCOMPONENT,\n    FilterType.CHROME,\n    FilterType.FADE,\n    FilterType.INSTANT,\n    FilterType.MONO,\n    FilterType.NOIR,\n    FilterType.PROCESS,\n    FilterType.TONAL,\n    FilterType.TRANSFER,\n    FilterType.SEPIA,\n  ]),\n  filterEnabled: PropTypes.bool,\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number,\n  ]),\n  drm: PropTypes.shape({\n    type: PropTypes.oneOf([\n      DRMType.CLEARKEY, DRMType.FAIRPLAY, DRMType.WIDEVINE, DRMType.PLAYREADY\n    ]),\n    licenseServer: PropTypes.string,\n    headers: PropTypes.shape({}),\n    base64Certificate: PropTypes.bool,\n    certificateUrl: PropTypes.string,\n    getLicense: PropTypes.func,\n  }),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: ImagePropTypes.resizeMode,\n  repeat: PropTypes.bool,\n  automaticallyWaitsToMinimizeStalling: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired,\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  preferredForwardBufferDuration: PropTypes.number,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n","import keyMirror from 'keymirror';\n\nexport default keyMirror({\n  contain: null,\n  cover: null,\n  stretch: null,\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst normalizeColor = require('@react-native/normalize-color');\n\nconst colorPropType = function(\n  isRequired,\n  props,\n  propName,\n  componentName,\n  location,\n  propFullName,\n) {\n  const color = props[propName];\n\n  if (color == null) {\n    if (isRequired) {\n      return new Error(\n        'Required ' +\n          location +\n          ' `' +\n          (propFullName || propName) +\n          '` was not specified in `' +\n          componentName +\n          '`.',\n      );\n    }\n    return;\n  }\n\n  if (typeof color === 'number') {\n    // Developers should not use a number, but we are using the prop type\n    // both for user provided colors and for transformed ones. This isn't ideal\n    // and should be fixed but will do for now...\n    return;\n  }\n\n  if (typeof color === 'string' && normalizeColor(color) === null) {\n    return new Error(\n      'Invalid ' +\n        location +\n        ' `' +\n        (propFullName || propName) +\n        '` supplied to `' +\n        componentName +\n        '`: ' +\n        color +\n        '\\n' +\n        `Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n`,\n    );\n  }\n};\n\nconst ColorPropType = colorPropType.bind(null, false /* isRequired */);\nColorPropType.isRequired = colorPropType.bind(null, true /* isRequired */);\n\nmodule.exports = ColorPropType;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst PropTypes = require('prop-types');\n\nconst DeprecatedEdgeInsetsPropType = PropTypes.shape({\n  top: PropTypes.number,\n  left: PropTypes.number,\n  bottom: PropTypes.number,\n  right: PropTypes.number,\n});\n\nmodule.exports = DeprecatedEdgeInsetsPropType;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedEdgeInsetsPropType = require('./DeprecatedEdgeInsetsPropType');\nconst DeprecatedImageSourcePropType = require('./DeprecatedImageSourcePropType');\nconst DeprecatedImageStylePropTypes = require('./DeprecatedImageStylePropTypes');\nconst DeprecatedStyleSheetPropType = require('./DeprecatedStyleSheetPropType');\nconst PropTypes = require('prop-types');\n\nmodule.exports = {\n  style: DeprecatedStyleSheetPropType(DeprecatedImageStylePropTypes),\n  source: DeprecatedImageSourcePropType,\n  defaultSource: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string,\n      width: PropTypes.number,\n      height: PropTypes.number,\n      scale: PropTypes.number,\n    }),\n    PropTypes.number,\n  ]),\n\n  accessible: PropTypes.bool,\n\n  accessibilityLabel: PropTypes.node,\n\n  blurRadius: PropTypes.number,\n\n  capInsets: DeprecatedEdgeInsetsPropType,\n\n  resizeMethod: PropTypes.oneOf(['auto', 'resize', 'scale']),\n\n  resizeMode: PropTypes.oneOf([\n    'cover',\n    'contain',\n    'stretch',\n    'repeat',\n    'center',\n  ]),\n\n  testID: PropTypes.string,\n\n  onLayout: PropTypes.func,\n\n  onLoadStart: PropTypes.func,\n\n  onProgress: PropTypes.func,\n\n  onError: PropTypes.func,\n\n  onPartialLoad: PropTypes.func,\n\n  onLoad: PropTypes.func,\n\n  onLoadEnd: PropTypes.func,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst PropTypes = require('prop-types');\n\nconst ImageURISourcePropType = PropTypes.shape({\n  uri: PropTypes.string,\n  bundle: PropTypes.string,\n  method: PropTypes.string,\n  headers: PropTypes.objectOf(PropTypes.string),\n  body: PropTypes.string,\n  cache: PropTypes.oneOf([\n    'default',\n    'reload',\n    'force-cache',\n    'only-if-cached',\n  ]),\n  width: PropTypes.number,\n  height: PropTypes.number,\n  scale: PropTypes.number,\n});\n\nconst ImageSourcePropType = PropTypes.oneOfType([\n  ImageURISourcePropType,\n  // Opaque type returned by require('./image.jpg')\n  PropTypes.number,\n  // Multiple sources\n  PropTypes.arrayOf(ImageURISourcePropType),\n]);\n\nmodule.exports = ImageSourcePropType;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst DeprecatedLayoutPropTypes = require('./DeprecatedLayoutPropTypes');\nconst DeprecatedShadowPropTypesIOS = require('./DeprecatedShadowPropTypesIOS');\nconst DeprecatedTransformPropTypes = require('./DeprecatedTransformPropTypes');\nconst ReactPropTypes = require('prop-types');\n\nconst ImageStylePropTypes = {\n  ...DeprecatedLayoutPropTypes,\n  ...DeprecatedShadowPropTypesIOS,\n  ...DeprecatedTransformPropTypes,\n  resizeMode: ReactPropTypes.oneOf([\n    'center',\n    'contain',\n    'cover',\n    'repeat',\n    'stretch',\n  ]),\n  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),\n  backgroundColor: DeprecatedColorPropType,\n  borderColor: DeprecatedColorPropType,\n  borderWidth: ReactPropTypes.number,\n  borderRadius: ReactPropTypes.number,\n  overflow: ReactPropTypes.oneOf(['visible', 'hidden']),\n\n  /**\n   * Changes the color of all the non-transparent pixels to the tintColor.\n   */\n  tintColor: DeprecatedColorPropType,\n  opacity: ReactPropTypes.number,\n  /**\n   * When the image has rounded corners, specifying an overlayColor will\n   * cause the remaining space in the corners to be filled with a solid color.\n   * This is useful in cases which are not supported by the Android\n   * implementation of rounded corners:\n   *   - Certain resize modes, such as 'contain'\n   *   - Animated GIFs\n   *\n   * A typical way to use this prop is with images displayed on a solid\n   * background and setting the `overlayColor` to the same color\n   * as the background.\n   *\n   * For details of how this works under the hood, see\n   * http://frescolib.org/docs/rounded-corners-and-circles.html\n   *\n   * @platform android\n   */\n  overlayColor: ReactPropTypes.string,\n\n  // Android-Specific styles\n  borderTopLeftRadius: ReactPropTypes.number,\n  borderTopRightRadius: ReactPropTypes.number,\n  borderBottomLeftRadius: ReactPropTypes.number,\n  borderBottomRightRadius: ReactPropTypes.number,\n};\n\nmodule.exports = ImageStylePropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst ReactPropTypes = require('prop-types');\n\nconst LayoutPropTypes = {\n  display: ReactPropTypes.oneOf(['none', 'flex']),\n  width: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  height: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  start: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  end: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),\n  top: ReactPropTypes.oneOfType([ReactPropTypes.number, ReactPropTypes.string]),\n  left: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  right: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  bottom: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  minWidth: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  maxWidth: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  minHeight: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  maxHeight: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  margin: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginVertical: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginHorizontal: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginTop: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginBottom: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginLeft: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginRight: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginStart: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  marginEnd: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  padding: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingVertical: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingHorizontal: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingTop: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingBottom: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingLeft: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingRight: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingStart: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  paddingEnd: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  borderWidth: ReactPropTypes.number,\n  borderTopWidth: ReactPropTypes.number,\n  borderStartWidth: ReactPropTypes.number,\n  borderEndWidth: ReactPropTypes.number,\n  borderRightWidth: ReactPropTypes.number,\n  borderBottomWidth: ReactPropTypes.number,\n  borderLeftWidth: ReactPropTypes.number,\n  position: ReactPropTypes.oneOf(['absolute', 'relative']),\n  flexDirection: ReactPropTypes.oneOf([\n    'row',\n    'row-reverse',\n    'column',\n    'column-reverse',\n  ]),\n  flexWrap: ReactPropTypes.oneOf(['wrap', 'nowrap', 'wrap-reverse']),\n  justifyContent: ReactPropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'space-between',\n    'space-around',\n    'space-evenly',\n  ]),\n  alignItems: ReactPropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'stretch',\n    'baseline',\n  ]),\n  alignSelf: ReactPropTypes.oneOf([\n    'auto',\n    'flex-start',\n    'flex-end',\n    'center',\n    'stretch',\n    'baseline',\n  ]),\n  alignContent: ReactPropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'stretch',\n    'space-between',\n    'space-around',\n  ]),\n  overflow: ReactPropTypes.oneOf(['visible', 'hidden', 'scroll']),\n  flex: ReactPropTypes.number,\n  flexGrow: ReactPropTypes.number,\n  flexShrink: ReactPropTypes.number,\n  flexBasis: ReactPropTypes.oneOfType([\n    ReactPropTypes.number,\n    ReactPropTypes.string,\n  ]),\n  aspectRatio: ReactPropTypes.number,\n  zIndex: ReactPropTypes.number,\n  direction: ReactPropTypes.oneOf(['inherit', 'ltr', 'rtl']),\n};\n\nmodule.exports = LayoutPropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst PropTypes = require('prop-types');\n\nconst PointPropType = PropTypes.shape({\n  x: PropTypes.number,\n  y: PropTypes.number,\n});\n\nmodule.exports = PointPropType;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst ReactPropTypes = require('prop-types');\n\nconst DeprecatedShadowPropTypesIOS = {\n  shadowColor: DeprecatedColorPropType,\n  shadowOffset: ReactPropTypes.shape({\n    width: ReactPropTypes.number,\n    height: ReactPropTypes.number,\n  }),\n  shadowOpacity: ReactPropTypes.number,\n  shadowRadius: ReactPropTypes.number,\n};\n\nmodule.exports = DeprecatedShadowPropTypesIOS;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst deprecatedCreateStrictShapeTypeChecker = require('./deprecatedCreateStrictShapeTypeChecker');\n\nfunction DeprecatedStyleSheetPropType(shape) {\n  const shapePropType = deprecatedCreateStrictShapeTypeChecker(shape);\n  return function(props, propName, componentName, location, ...rest) {\n    let newProps = props;\n    if (props[propName]) {\n      // Just make a dummy prop object with only the flattened style\n      newProps = {};\n      newProps[propName] = flattenStyle(props[propName]);\n    }\n    return shapePropType(newProps, propName, componentName, location, ...rest);\n  };\n}\n\nfunction flattenStyle(style) {\n  if (style === null || typeof style !== 'object') {\n    return undefined;\n  }\n\n  if (!Array.isArray(style)) {\n    return style;\n  }\n\n  const result = {};\n  for (let i = 0, styleLength = style.length; i < styleLength; ++i) {\n    const computedStyle = flattenStyle(style[i]);\n    if (computedStyle) {\n      for (const key in computedStyle) {\n        result[key] = computedStyle[key];\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = DeprecatedStyleSheetPropType;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst DeprecatedTextPropTypes = require('./DeprecatedTextPropTypes');\nconst DeprecatedViewPropTypes = require('./DeprecatedViewPropTypes');\nconst PropTypes = require('prop-types');\n\nconst DataDetectorTypes = [\n  'phoneNumber',\n  'link',\n  'address',\n  'calendarEvent',\n  'none',\n  'all',\n];\n\nmodule.exports = {\n  ...DeprecatedViewPropTypes,\n  /**\n   * Can tell `TextInput` to automatically capitalize certain characters.\n   *\n   * - `characters`: all characters.\n   * - `words`: first letter of each word.\n   * - `sentences`: first letter of each sentence (*default*).\n   * - `none`: don't auto capitalize anything.\n   */\n  autoCapitalize: PropTypes.oneOf(['none', 'sentences', 'words', 'characters']),\n  /**\n   * Determines which content to suggest on auto complete, e.g.`username`.\n   * To disable auto complete, use `off`.\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `username`\n   * - `password`\n   * - `email`\n   * - `name`\n   * - `tel`\n   * - `street-address`\n   * - `postal-code`\n   * - `cc-number`\n   * - `cc-csc`\n   * - `cc-exp`\n   * - `cc-exp-month`\n   * - `cc-exp-year`\n   * - `off`\n   *\n   * @platform android\n   */\n  autoCompleteType: PropTypes.oneOf([\n    'cc-csc',\n    'cc-exp',\n    'cc-exp-month',\n    'cc-exp-year',\n    'cc-number',\n    'email',\n    'name',\n    'password',\n    'postal-code',\n    'street-address',\n    'tel',\n    'username',\n    'off',\n  ]),\n  /**\n   * If `false`, disables auto-correct. The default value is `true`.\n   */\n  autoCorrect: PropTypes.bool,\n  /**\n   * If `false`, disables spell-check style (i.e. red underlines).\n   * The default value is inherited from `autoCorrect`.\n   * @platform ios\n   */\n  spellCheck: PropTypes.bool,\n  /**\n   * If `true`, focuses the input on `componentDidMount`.\n   * The default value is `false`.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Specifies whether fonts should scale to respect Text Size accessibility settings. The\n   * default is `true`.\n   */\n  allowFontScaling: PropTypes.bool,\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier: PropTypes.number,\n  /**\n   * If `false`, text is not editable. The default value is `true`.\n   */\n  editable: PropTypes.bool,\n  /**\n   * Determines which keyboard to open, e.g.`numeric`.\n   *\n   * The following values work across platforms:\n   *\n   * - `default`\n   * - `numeric`\n   * - `number-pad`\n   * - `decimal-pad`\n   * - `email-address`\n   * - `phone-pad`\n   *\n   * *iOS Only*\n   *\n   * The following values work on iOS only:\n   *\n   * - `ascii-capable`\n   * - `numbers-and-punctuation`\n   * - `url`\n   * - `name-phone-pad`\n   * - `twitter`\n   * - `web-search`\n   * - `ascii-capable-number-pad`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `visible-password`\n   */\n  keyboardType: PropTypes.oneOf([\n    // Cross-platform\n    'default',\n    'email-address',\n    'numeric',\n    'phone-pad',\n    'number-pad',\n    // iOS-only\n    'ascii-capable',\n    'numbers-and-punctuation',\n    'url',\n    'name-phone-pad',\n    'decimal-pad',\n    'twitter',\n    'web-search',\n    // iOS 10+ only\n    'ascii-capable-number-pad',\n    // Android-only\n    'visible-password',\n  ]),\n  /**\n   * Determines the color of the keyboard.\n   * @platform ios\n   */\n  keyboardAppearance: PropTypes.oneOf(['default', 'light', 'dark']),\n  /**\n   * Determines how the return key should look. On Android you can also use\n   * `returnKeyLabel`.\n   *\n   * *Cross platform*\n   *\n   * The following values work across platforms:\n   *\n   * - `done`\n   * - `go`\n   * - `next`\n   * - `search`\n   * - `send`\n   *\n   * *Android Only*\n   *\n   * The following values work on Android only:\n   *\n   * - `none`\n   * - `previous`\n   *\n   * *iOS Only*\n   *\n   * The following values work on iOS only:\n   *\n   * - `default`\n   * - `emergency-call`\n   * - `google`\n   * - `join`\n   * - `route`\n   * - `yahoo`\n   */\n  returnKeyType: PropTypes.oneOf([\n    // Cross-platform\n    'done',\n    'go',\n    'next',\n    'search',\n    'send',\n    // Android-only\n    'none',\n    'previous',\n    // iOS-only\n    'default',\n    'emergency-call',\n    'google',\n    'join',\n    'route',\n    'yahoo',\n  ]),\n  /**\n   * Sets the return key to the label. Use it instead of `returnKeyType`.\n   * @platform android\n   */\n  returnKeyLabel: PropTypes.string,\n  /**\n   * Limits the maximum number of characters that can be entered. Use this\n   * instead of implementing the logic in JS to avoid flicker.\n   */\n  maxLength: PropTypes.number,\n  /**\n   * Sets the number of lines for a `TextInput`. Use it with multiline set to\n   * `true` to be able to fill the lines.\n   * @platform android\n   */\n  numberOfLines: PropTypes.number,\n  /**\n   * When `false`, if there is a small amount of space available around a text input\n   * (e.g. landscape orientation on a phone), the OS may choose to have the user edit\n   * the text inside of a full screen text input mode. When `true`, this feature is\n   * disabled and users will always edit the text directly inside of the text input.\n   * Defaults to `false`.\n   * @platform android\n   */\n  disableFullscreenUI: PropTypes.bool,\n  /**\n   * If `true`, the keyboard disables the return key when there is no text and\n   * automatically enables it when there is text. The default value is `false`.\n   * @platform ios\n   */\n  enablesReturnKeyAutomatically: PropTypes.bool,\n  /**\n   * If `true`, the text input can be multiple lines.\n   * The default value is `false`.\n   */\n  multiline: PropTypes.bool,\n  /**\n   * Set text break strategy on Android API Level 23+, possible values are `simple`, `highQuality`, `balanced`\n   * The default value is `simple`.\n   * @platform android\n   */\n  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback that is called when the text input's text changes.\n   * Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText: PropTypes.func,\n  /**\n   * Callback that is called when the text input's content size changes.\n   * This will be called with\n   * `{ nativeEvent: { contentSize: { width, height } } }`.\n   *\n   * Only called for multiline text inputs.\n   */\n  onContentSizeChange: PropTypes.func,\n  onTextInput: PropTypes.func,\n  /**\n   * Callback that is called when text input ends.\n   */\n  onEndEditing: PropTypes.func,\n  /**\n   * Callback that is called when the text input selection is changed.\n   * This will be called with\n   * `{ nativeEvent: { selection: { start, end } } }`.\n   */\n  onSelectionChange: PropTypes.func,\n  /**\n   * Callback that is called when the text input's submit button is pressed.\n   * Invalid if `multiline={true}` is specified.\n   */\n  onSubmitEditing: PropTypes.func,\n  /**\n   * Callback that is called when a key is pressed.\n   * This will be called with `{ nativeEvent: { key: keyValue } }`\n   * where `keyValue` is `'Enter'` or `'Backspace'` for respective keys and\n   * the typed-in character otherwise including `' '` for space.\n   * Fires before `onChange` callbacks.\n   */\n  onKeyPress: PropTypes.func,\n  /**\n   * Invoked on mount and layout changes with `{x, y, width, height}`.\n   */\n  onLayout: PropTypes.func,\n  /**\n   * Invoked on content scroll with `{ nativeEvent: { contentOffset: { x, y } } }`.\n   * May also contain other properties from ScrollEvent but on Android contentSize\n   * is not provided for performance reasons.\n   */\n  onScroll: PropTypes.func,\n  /**\n   * The string that will be rendered before text input has been entered.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * The text color of the placeholder string.\n   */\n  placeholderTextColor: DeprecatedColorPropType,\n  /**\n   * If `false`, scrolling of the text view will be disabled.\n   * The default value is `true`. Does only work with 'multiline={true}'.\n   * @platform ios\n   */\n  scrollEnabled: PropTypes.bool,\n  /**\n   * If `true`, the text input obscures the text entered so that sensitive text\n   * like passwords stay secure. The default value is `false`. Does not work with 'multiline={true}'.\n   */\n  secureTextEntry: PropTypes.bool,\n  /**\n   * The highlight and cursor color of the text input.\n   */\n  selectionColor: DeprecatedColorPropType,\n  /**\n   * The start and end of the text input's selection. Set start and end to\n   * the same value to position the cursor.\n   */\n  selection: PropTypes.shape({\n    start: PropTypes.number.isRequired,\n    end: PropTypes.number,\n  }),\n  /**\n   * The value to show for the text input. `TextInput` is a controlled\n   * component, which means the native value will be forced to match this\n   * value prop if provided. For most uses, this works great, but in some\n   * cases this may cause flickering - one common cause is preventing edits\n   * by keeping value the same. In addition to simply setting the same value,\n   * either set `editable={false}`, or set/update `maxLength` to prevent\n   * unwanted edits without flicker.\n   */\n  value: PropTypes.string,\n  /**\n   * Provides an initial value that will change when the user starts typing.\n   * Useful for simple use-cases where you do not want to deal with listening\n   * to events and updating the value prop to keep the controlled state in sync.\n   */\n  defaultValue: PropTypes.string,\n  /**\n   * When the clear button should appear on the right side of the text view.\n   * This property is supported only for single-line TextInput component.\n   * @platform ios\n   */\n  clearButtonMode: PropTypes.oneOf([\n    'never',\n    'while-editing',\n    'unless-editing',\n    'always',\n  ]),\n  /**\n   * If `true`, clears the text field automatically when editing begins.\n   * @platform ios\n   */\n  clearTextOnFocus: PropTypes.bool,\n  /**\n   * If `true`, all text will automatically be selected on focus.\n   */\n  selectTextOnFocus: PropTypes.bool,\n  /**\n   * If `true`, the text field will blur when submitted.\n   * The default value is true for single-line fields and false for\n   * multiline fields. Note that for multiline fields, setting `blurOnSubmit`\n   * to `true` means that pressing return will blur the field and trigger the\n   * `onSubmitEditing` event instead of inserting a newline into the field.\n   */\n  blurOnSubmit: PropTypes.bool,\n  /**\n   * Note that not all Text styles are supported, an incomplete list of what is not supported includes:\n   *\n   * - `borderLeftWidth`\n   * - `borderTopWidth`\n   * - `borderRightWidth`\n   * - `borderBottomWidth`\n   * - `borderTopLeftRadius`\n   * - `borderTopRightRadius`\n   * - `borderBottomRightRadius`\n   * - `borderBottomLeftRadius`\n   *\n   * see [Issue#7070](https://github.com/facebook/react-native/issues/7070)\n   * for more detail.\n   *\n   * [Styles](docs/style.html)\n   */\n  style: DeprecatedTextPropTypes.style,\n  /**\n   * The color of the `TextInput` underline.\n   * @platform android\n   */\n  underlineColorAndroid: DeprecatedColorPropType,\n\n  /**\n   * If defined, the provided image resource will be rendered on the left.\n   * The image resource must be inside `/android/app/src/main/res/drawable` and referenced\n   * like\n   * ```\n   * <TextInput\n   *  inlineImageLeft='search_icon'\n   * />\n   * ```\n   * @platform android\n   */\n  inlineImageLeft: PropTypes.string,\n\n  /**\n   * Padding between the inline image, if any, and the text input itself.\n   * @platform android\n   */\n  inlineImagePadding: PropTypes.number,\n\n  /**\n   * If `true`, allows TextInput to pass touch events to the parent component.\n   * This allows components such as SwipeableListView to be swipeable from the TextInput on iOS,\n   * as is the case on Android by default.\n   * If `false`, TextInput always asks to handle the input (except when disabled).\n   * @platform ios\n   */\n  rejectResponderTermination: PropTypes.bool,\n\n  /**\n   * Determines the types of data converted to clickable URLs in the text input.\n   * Only valid if `multiline={true}` and `editable={false}`.\n   * By default no data types are detected.\n   *\n   * You can provide one type or an array of many types.\n   *\n   * Possible values for `dataDetectorTypes` are:\n   *\n   * - `'phoneNumber'`\n   * - `'link'`\n   * - `'address'`\n   * - `'calendarEvent'`\n   * - `'none'`\n   * - `'all'`\n   *\n   * @platform ios\n   */\n  dataDetectorTypes: PropTypes.oneOfType([\n    PropTypes.oneOf(DataDetectorTypes),\n    PropTypes.arrayOf(PropTypes.oneOf(DataDetectorTypes)),\n  ]),\n  /**\n   * If `true`, caret is hidden. The default value is `false`.\n   * This property is supported only for single-line TextInput component on iOS.\n   */\n  caretHidden: PropTypes.bool,\n  /*\n   * If `true`, contextMenuHidden is hidden. The default value is `false`.\n   */\n  contextMenuHidden: PropTypes.bool,\n  /**\n   * An optional identifier which links a custom InputAccessoryView to\n   * this text input. The InputAccessoryView is rendered above the\n   * keyboard when this text input is focused.\n   * @platform ios\n   */\n  inputAccessoryViewID: PropTypes.string,\n  /**\n   * Give the keyboard and the system information about the\n   * expected semantic meaning for the content that users enter.\n   * @platform ios\n   */\n  textContentType: PropTypes.oneOf([\n    'none',\n    'URL',\n    'addressCity',\n    'addressCityAndState',\n    'addressState',\n    'countryName',\n    'creditCardNumber',\n    'emailAddress',\n    'familyName',\n    'fullStreetAddress',\n    'givenName',\n    'jobTitle',\n    'location',\n    'middleName',\n    'name',\n    'namePrefix',\n    'nameSuffix',\n    'nickname',\n    'organizationName',\n    'postalCode',\n    'streetAddressLine1',\n    'streetAddressLine2',\n    'sublocality',\n    'telephoneNumber',\n    'username',\n    'password',\n    'newPassword',\n    'oneTimeCode',\n  ]),\n  /**\n   * When `false`, it will prevent the soft keyboard from showing when the field is focused.\n   * Defaults to `true`.\n   */\n  showSoftInputOnFocus: PropTypes.bool,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst DeprecatedEdgeInsetsPropType = require('./DeprecatedEdgeInsetsPropType');\nconst DeprecatedStyleSheetPropType = require('./DeprecatedStyleSheetPropType');\nconst PropTypes = require('prop-types');\nconst DeprecatedTextStylePropTypes = require('./DeprecatedTextStylePropTypes');\n\nconst stylePropType = DeprecatedStyleSheetPropType(\n  DeprecatedTextStylePropTypes,\n);\n\nconst DataDetectorTypes = ['phoneNumber', 'link', 'email', 'none', 'all'];\n\nmodule.exports = {\n  /**\n   * When `numberOfLines` is set, this prop defines how text will be\n   * truncated.\n   *\n   * See https://reactnative.dev/docs/text.html#ellipsizemode\n   */\n  ellipsizeMode: PropTypes.oneOf(['head', 'middle', 'tail', 'clip']),\n  /**\n   * Used to truncate the text with an ellipsis.\n   *\n   * See https://reactnative.dev/docs/text.html#numberoflines\n   */\n  numberOfLines: PropTypes.number,\n  /**\n   * Set text break strategy on Android.\n   *\n   * See https://reactnative.dev/docs/text.html#textbreakstrategy\n   */\n  textBreakStrategy: PropTypes.oneOf(['simple', 'highQuality', 'balanced']),\n  /**\n   * Invoked on mount and layout changes.\n   *\n   * See https://reactnative.dev/docs/text.html#onlayout\n   */\n  onLayout: PropTypes.func,\n  /**\n   * This function is called on press.\n   *\n   * See https://reactnative.dev/docs/text.html#onpress\n   */\n  onPress: PropTypes.func,\n  /**\n   * This function is called on long press.\n   *\n   * See https://reactnative.dev/docs/text.html#onlongpress\n   */\n  onLongPress: PropTypes.func,\n  /**\n   * Defines how far your touch may move off of the button, before\n   * deactivating the button.\n   *\n   * See https://reactnative.dev/docs/text.html#pressretentionoffset\n   */\n  pressRetentionOffset: DeprecatedEdgeInsetsPropType,\n  /**\n   * Lets the user select text.\n   *\n   * See https://reactnative.dev/docs/text.html#selectable\n   */\n  selectable: PropTypes.bool,\n  /**\n   * The highlight color of the text.\n   *\n   * See https://reactnative.dev/docs/text.html#selectioncolor\n   */\n  selectionColor: DeprecatedColorPropType,\n  /**\n   * When `true`, no visual change is made when text is pressed down.\n   *\n   * See https://reactnative.dev/docs/text.html#supperhighlighting\n   */\n  suppressHighlighting: PropTypes.bool,\n  style: stylePropType,\n  /**\n   * Used to locate this view in end-to-end tests.\n   *\n   * See https://reactnative.dev/docs/text.html#testid\n   */\n  testID: PropTypes.string,\n  /**\n   * Used to locate this view from native code.\n   *\n   * See https://reactnative.dev/docs/text.html#nativeid\n   */\n  nativeID: PropTypes.string,\n  /**\n   * Whether fonts should scale to respect Text Size accessibility settings.\n   *\n   * See https://reactnative.dev/docs/text.html#allowfontscaling\n   */\n  allowFontScaling: PropTypes.bool,\n  /**\n   * Specifies largest possible scale a font can reach when `allowFontScaling` is enabled.\n   * Possible values:\n   * `null/undefined` (default): inherit from the parent node or the global default (0)\n   * `0`: no max, ignore parent/global default\n   * `>= 1`: sets the maxFontSizeMultiplier of this node to this value\n   */\n  maxFontSizeMultiplier: PropTypes.number,\n  /**\n   * Indicates whether the view is an accessibility element.\n   *\n   * See https://reactnative.dev/docs/text.html#accessible\n   */\n  accessible: PropTypes.bool,\n  /**\n   * Whether font should be scaled down automatically.\n   *\n   * See https://reactnative.dev/docs/text.html#adjustsfontsizetofit\n   */\n  adjustsFontSizeToFit: PropTypes.bool,\n  /**\n   * Smallest possible scale a font can reach.\n   *\n   * See https://reactnative.dev/docs/text.html#minimumfontscale\n   */\n  minimumFontScale: PropTypes.number,\n  /**\n   * Specifies the disabled state of the text view for testing purposes.\n   *\n   * See https://reactnative.dev/docs/text.html#disabled\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Determines the types of data converted to clickable URLs in text.\n   *\n   * See https://reactnative.dev/docs/text.html#dataDetectorType\n   */\n  dataDetectorType: PropTypes.oneOf(DataDetectorTypes),\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst DeprecatedViewStylePropTypes = require('./DeprecatedViewStylePropTypes');\nconst ReactPropTypes = require('prop-types');\n\nconst DeprecatedTextStylePropTypes = {\n  ...DeprecatedViewStylePropTypes,\n\n  color: DeprecatedColorPropType,\n  fontFamily: ReactPropTypes.string,\n  fontSize: ReactPropTypes.number,\n  fontStyle: ReactPropTypes.oneOf(['normal', 'italic']),\n  /**\n   * Specifies font weight. The values 'normal' and 'bold' are supported for\n   * most fonts. Not all fonts have a variant for each of the numeric values,\n   * in that case the closest one is chosen.\n   */\n  fontWeight: ReactPropTypes.oneOf([\n    'normal' /*default*/,\n    'bold',\n    '100',\n    '200',\n    '300',\n    '400',\n    '500',\n    '600',\n    '700',\n    '800',\n    '900',\n  ]),\n  fontVariant: ReactPropTypes.arrayOf(\n    ReactPropTypes.oneOf([\n      'small-caps',\n      'oldstyle-nums',\n      'lining-nums',\n      'tabular-nums',\n      'proportional-nums',\n    ]),\n  ),\n  textShadowOffset: ReactPropTypes.shape({\n    width: ReactPropTypes.number,\n    height: ReactPropTypes.number,\n  }),\n  textShadowRadius: ReactPropTypes.number,\n  textShadowColor: DeprecatedColorPropType,\n  /**\n   * @platform ios\n   */\n  letterSpacing: ReactPropTypes.number,\n  lineHeight: ReactPropTypes.number,\n  /**\n   * Specifies text alignment. The value 'justify' is only supported on iOS and\n   * fallbacks to `left` on Android.\n   */\n  textAlign: ReactPropTypes.oneOf([\n    'auto' /*default*/,\n    'left',\n    'right',\n    'center',\n    'justify',\n  ]),\n  /**\n   * @platform android\n   */\n  textAlignVertical: ReactPropTypes.oneOf([\n    'auto' /*default*/,\n    'top',\n    'bottom',\n    'center',\n  ]),\n  /**\n   * Set to `false` to remove extra font padding intended to make space for certain ascenders / descenders.\n   * With some fonts, this padding can make text look slightly misaligned when centered vertically.\n   * For best results also set `textAlignVertical` to `center`. Default is true.\n   * @platform android\n   */\n  includeFontPadding: ReactPropTypes.bool,\n  textDecorationLine: ReactPropTypes.oneOf([\n    'none' /*default*/,\n    'underline',\n    'line-through',\n    'underline line-through',\n  ]),\n  /**\n   * @platform ios\n   */\n  textDecorationStyle: ReactPropTypes.oneOf([\n    'solid' /*default*/,\n    'double',\n    'dotted',\n    'dashed',\n  ]),\n  /**\n   * @platform ios\n   */\n  textDecorationColor: DeprecatedColorPropType,\n  textTransform: ReactPropTypes.oneOf([\n    'none' /*default*/,\n    'capitalize',\n    'uppercase',\n    'lowercase',\n  ]),\n  /**\n   * @platform ios\n   */\n  writingDirection: ReactPropTypes.oneOf(['auto' /*default*/, 'ltr', 'rtl']),\n};\n\nmodule.exports = DeprecatedTextStylePropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst ReactPropTypes = require('prop-types');\n\nconst TransformMatrixPropType = function(props, propName, componentName) {\n  if (props[propName]) {\n    return new Error(\n      'The transformMatrix style property is deprecated. ' +\n        'Use `transform: [{ matrix: ... }]` instead.',\n    );\n  }\n};\n\nconst DecomposedMatrixPropType = function(props, propName, componentName) {\n  if (props[propName]) {\n    return new Error(\n      'The decomposedMatrix style property is deprecated. ' +\n        'Use `transform: [...]` instead.',\n    );\n  }\n};\n\nconst DeprecatedTransformPropTypes = {\n  transform: ReactPropTypes.arrayOf(\n    ReactPropTypes.oneOfType([\n      ReactPropTypes.shape({perspective: ReactPropTypes.number}),\n      ReactPropTypes.shape({rotate: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateX: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateY: ReactPropTypes.string}),\n      ReactPropTypes.shape({rotateZ: ReactPropTypes.string}),\n      ReactPropTypes.shape({scale: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleX: ReactPropTypes.number}),\n      ReactPropTypes.shape({scaleY: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateX: ReactPropTypes.number}),\n      ReactPropTypes.shape({translateY: ReactPropTypes.number}),\n      ReactPropTypes.shape({skewX: ReactPropTypes.string}),\n      ReactPropTypes.shape({skewY: ReactPropTypes.string}),\n    ]),\n  ),\n  transformMatrix: TransformMatrixPropType,\n  decomposedMatrix: DecomposedMatrixPropType,\n  scaleX: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  scaleY: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  rotation: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  translateX: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n  translateY: deprecatedPropType(\n    ReactPropTypes.number,\n    'Use the transform prop instead.',\n  ),\n};\n\n/**\n * Adds a deprecation warning when the prop is used.\n */\nfunction deprecatedPropType(propType, explanation) {\n  return function validate(props, propName, componentName, ...rest) {\n    if (props[propName] !== undefined) {\n      console.warn(\n        `\\`${propName}\\` supplied to \\`${componentName}\\` has been deprecated. ${explanation}`,\n      );\n    }\n\n    return propType(props, propName, componentName, ...rest);\n  };\n}\n\nmodule.exports = DeprecatedTransformPropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nmodule.exports = {\n  // This must be kept in sync with the AccessibilityRolesMask in RCTViewManager.m\n  DeprecatedAccessibilityRoles: [\n    'none',\n    'button',\n    'togglebutton',\n    'link',\n    'search',\n    'image',\n    'keyboardkey',\n    'text',\n    'adjustable',\n    'imagebutton',\n    'header',\n    'summary',\n    'alert',\n    'checkbox',\n    'combobox',\n    'menu',\n    'menubar',\n    'menuitem',\n    'progressbar',\n    'radio',\n    'radiogroup',\n    'scrollbar',\n    'spinbutton',\n    'switch',\n    'tab',\n    'tablist',\n    'timer',\n    'toolbar',\n  ],\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedEdgeInsetsPropType = require('./DeprecatedEdgeInsetsPropType');\nconst DeprecatedStyleSheetPropType = require('./DeprecatedStyleSheetPropType');\nconst DeprecatedViewStylePropTypes = require('./DeprecatedViewStylePropTypes');\nconst PropTypes = require('prop-types');\n\nconst {DeprecatedAccessibilityRoles} = require('./DeprecatedViewAccessibility');\n\nconst stylePropType = DeprecatedStyleSheetPropType(\n  DeprecatedViewStylePropTypes,\n);\n\nmodule.exports = {\n  /**\n   * When `true`, indicates that the view is an accessibility element.\n   * By default, all the touchable elements are accessible.\n   *\n   * See https://reactnative.dev/docs/view.html#accessible\n   */\n  accessible: PropTypes.bool,\n\n  /**\n   * Overrides the text that's read by the screen reader when the user interacts\n   * with the element. By default, the label is constructed by traversing all\n   * the children and accumulating all the `Text` nodes separated by space.\n   *\n   * See https://reactnative.dev/docs/view.html#accessibilitylabel\n   */\n  accessibilityLabel: PropTypes.node,\n\n  /**\n   * An accessibility hint helps users understand what will happen when they perform\n   * an action on the accessibility element when that result is not obvious from the\n   * accessibility label.\n   *\n   *\n   * See https://reactnative.dev/docs/view.html#accessibilityHint\n   */\n  accessibilityHint: PropTypes.string,\n\n  /**\n   * Provides an array of custom actions available for accessibility.\n   *\n   * @platform ios\n   */\n  accessibilityActions: PropTypes.arrayOf(PropTypes.string),\n\n  /**\n   * Prevents view from being inverted if set to true and color inversion is turned on.\n   *\n   * @platform ios\n   */\n  accessibilityIgnoresInvertColors: PropTypes.bool,\n\n  /**\n   * Indicates to accessibility services to treat UI component like a specific role.\n   */\n  accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),\n\n  accessibilityState: PropTypes.object,\n  accessibilityValue: PropTypes.object,\n  /**\n   * Indicates to accessibility services whether the user should be notified\n   * when this view changes. Works for Android API >= 19 only.\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/view.html#accessibilityliveregion\n   */\n  accessibilityLiveRegion: PropTypes.oneOf(['none', 'polite', 'assertive']),\n\n  /**\n   * Controls how view is important for accessibility which is if it\n   * fires accessibility events and if it is reported to accessibility services\n   * that query the screen. Works for Android only.\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/view.html#importantforaccessibility\n   */\n  importantForAccessibility: PropTypes.oneOf([\n    'auto',\n    'yes',\n    'no',\n    'no-hide-descendants',\n  ]),\n\n  /**\n   * A value indicating whether VoiceOver should ignore the elements\n   * within views that are siblings of the receiver.\n   * Default is `false`.\n   *\n   * @platform ios\n   *\n   * See https://reactnative.dev/docs/view.html#accessibilityviewismodal\n   */\n  accessibilityViewIsModal: PropTypes.bool,\n\n  /**\n   * A value indicating whether the accessibility elements contained within\n   * this accessibility element are hidden.\n   *\n   * @platform ios\n   *\n   * See https://reactnative.dev/docs/view.html#accessibilityElementsHidden\n   */\n  accessibilityElementsHidden: PropTypes.bool,\n\n  /**\n   * When `accessible` is true, the system will try to invoke this function\n   * when the user performs an accessibility custom action.\n   *\n   * @platform ios\n   */\n  onAccessibilityAction: PropTypes.func,\n\n  /**\n   * When `accessible` is true, the system will try to invoke this function\n   * when the user performs accessibility tap gesture.\n   *\n   * See https://reactnative.dev/docs/view.html#onaccessibilitytap\n   */\n  onAccessibilityTap: PropTypes.func,\n\n  /**\n   * When `accessible` is `true`, the system will invoke this function when the\n   * user performs the magic tap gesture.\n   *\n   * See https://reactnative.dev/docs/view.html#onmagictap\n   */\n  onMagicTap: PropTypes.func,\n\n  /**\n   * Used to locate this view in end-to-end tests.\n   *\n   * > This disables the 'layout-only view removal' optimization for this view!\n   *\n   * See https://reactnative.dev/docs/view.html#testid\n   */\n  testID: PropTypes.string,\n\n  /**\n   * Used to locate this view from native classes.\n   *\n   * > This disables the 'layout-only view removal' optimization for this view!\n   *\n   * See https://reactnative.dev/docs/view.html#nativeid\n   */\n  nativeID: PropTypes.string,\n\n  /**\n   * For most touch interactions, you'll simply want to wrap your component in\n   * `TouchableHighlight` or `TouchableOpacity`. Check out `Touchable.js`,\n   * `ScrollResponder.js` and `ResponderEventPlugin.js` for more discussion.\n   */\n\n  /**\n   * The View is now responding for touch events. This is the time to highlight\n   * and show the user what is happening.\n   *\n   * `View.props.onResponderGrant: (event) => {}`, where `event` is a synthetic\n   * touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onrespondergrant\n   */\n  onResponderGrant: PropTypes.func,\n\n  /**\n   * The user is moving their finger.\n   *\n   * `View.props.onResponderMove: (event) => {}`, where `event` is a synthetic\n   * touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onrespondermove\n   */\n  onResponderMove: PropTypes.func,\n\n  /**\n   * Another responder is already active and will not release it to that `View`\n   * asking to be the responder.\n   *\n   * `View.props.onResponderReject: (event) => {}`, where `event` is a\n   * synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onresponderreject\n   */\n  onResponderReject: PropTypes.func,\n\n  /**\n   * Fired at the end of the touch.\n   *\n   * `View.props.onResponderRelease: (event) => {}`, where `event` is a\n   * synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onresponderrelease\n   */\n  onResponderRelease: PropTypes.func,\n\n  /**\n   * The responder has been taken from the `View`. Might be taken by other\n   * views after a call to `onResponderTerminationRequest`, or might be taken\n   * by the OS without asking (e.g., happens with control center/ notification\n   * center on iOS)\n   *\n   * `View.props.onResponderTerminate: (event) => {}`, where `event` is a\n   * synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onresponderterminate\n   */\n  onResponderTerminate: PropTypes.func,\n\n  /**\n   * Some other `View` wants to become responder and is asking this `View` to\n   * release its responder. Returning `true` allows its release.\n   *\n   * `View.props.onResponderTerminationRequest: (event) => {}`, where `event`\n   * is a synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onresponderterminationrequest\n   */\n  onResponderTerminationRequest: PropTypes.func,\n\n  /**\n   * Does this view want to become responder on the start of a touch?\n   *\n   * `View.props.onStartShouldSetResponder: (event) => [true | false]`, where\n   * `event` is a synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onstartshouldsetresponder\n   */\n  onStartShouldSetResponder: PropTypes.func,\n\n  /**\n   * If a parent `View` wants to prevent a child `View` from becoming responder\n   * on a touch start, it should have this handler which returns `true`.\n   *\n   * `View.props.onStartShouldSetResponderCapture: (event) => [true | false]`,\n   * where `event` is a synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onstartshouldsetrespondercapture\n   */\n  onStartShouldSetResponderCapture: PropTypes.func,\n\n  /**\n   * Does this view want to \"claim\" touch responsiveness? This is called for\n   * every touch move on the `View` when it is not the responder.\n   *\n   * `View.props.onMoveShouldSetResponder: (event) => [true | false]`, where\n   * `event` is a synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onmoveshouldsetresponder\n   */\n  onMoveShouldSetResponder: PropTypes.func,\n\n  /**\n   * If a parent `View` wants to prevent a child `View` from becoming responder\n   * on a move, it should have this handler which returns `true`.\n   *\n   * `View.props.onMoveShouldSetResponderCapture: (event) => [true | false]`,\n   * where `event` is a synthetic touch event as described above.\n   *\n   * See https://reactnative.dev/docs/view.html#onMoveShouldsetrespondercapture\n   */\n  onMoveShouldSetResponderCapture: PropTypes.func,\n\n  /**\n   * This defines how far a touch event can start away from the view.\n   * Typical interface guidelines recommend touch targets that are at least\n   * 30 - 40 points/density-independent pixels.\n   *\n   * > The touch area never extends past the parent view bounds and the Z-index\n   * > of sibling views always takes precedence if a touch hits two overlapping\n   * > views.\n   *\n   * See https://reactnative.dev/docs/view.html#hitslop\n   */\n  hitSlop: DeprecatedEdgeInsetsPropType,\n\n  /**\n   * Invoked on mount and layout changes with:\n   *\n   * `{nativeEvent: { layout: {x, y, width, height}}}`\n   *\n   * This event is fired immediately once the layout has been calculated, but\n   * the new layout may not yet be reflected on the screen at the time the\n   * event is received, especially if a layout animation is in progress.\n   *\n   * See https://reactnative.dev/docs/view.html#onlayout\n   */\n  onLayout: PropTypes.func,\n\n  /**\n   * Controls whether the `View` can be the target of touch events.\n   *\n   * See https://reactnative.dev/docs/view.html#pointerevents\n   */\n  pointerEvents: PropTypes.oneOf(['box-none', 'none', 'box-only', 'auto']),\n\n  /**\n   * See https://reactnative.dev/docs/style.html\n   */\n  style: stylePropType,\n\n  /**\n   * This is a special performance property exposed by `RCTView` and is useful\n   * for scrolling content when there are many subviews, most of which are\n   * offscreen. For this property to be effective, it must be applied to a\n   * view that contains many subviews that extend outside its bound. The\n   * subviews must also have `overflow: hidden`, as should the containing view\n   * (or one of its superviews).\n   *\n   * See https://reactnative.dev/docs/view.html#removeclippedsubviews\n   */\n  removeClippedSubviews: PropTypes.bool,\n\n  /**\n   * Whether this `View` should render itself (and all of its children) into a\n   * single hardware texture on the GPU.\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/view.html#rendertohardwaretextureandroid\n   */\n  renderToHardwareTextureAndroid: PropTypes.bool,\n\n  /**\n   * Whether this `View` should be rendered as a bitmap before compositing.\n   *\n   * @platform ios\n   *\n   * See https://reactnative.dev/docs/view.html#shouldrasterizeios\n   */\n  shouldRasterizeIOS: PropTypes.bool,\n\n  /**\n   * Views that are only used to layout their children or otherwise don't draw\n   * anything may be automatically removed from the native hierarchy as an\n   * optimization. Set this property to `false` to disable this optimization and\n   * ensure that this `View` exists in the native view hierarchy.\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/view.html#collapsable\n   */\n  collapsable: PropTypes.bool,\n\n  /**\n   * Whether this `View` needs to rendered offscreen and composited with an\n   * alpha in order to preserve 100% correct colors and blending behavior.\n   *\n   * @platform android\n   *\n   * See https://reactnative.dev/docs/view.html#needsoffscreenalphacompositing\n   */\n  needsOffscreenAlphaCompositing: PropTypes.bool,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst DeprecatedLayoutPropTypes = require('./DeprecatedLayoutPropTypes');\nconst DeprecatedShadowPropTypesIOS = require('./DeprecatedShadowPropTypesIOS');\nconst DeprecatedTransformPropTypes = require('./DeprecatedTransformPropTypes');\nconst ReactPropTypes = require('prop-types');\n\n/**\n * Warning: Some of these properties may not be supported in all releases.\n */\nconst DeprecatedViewStylePropTypes = {\n  ...DeprecatedLayoutPropTypes,\n  ...DeprecatedShadowPropTypesIOS,\n  ...DeprecatedTransformPropTypes,\n  backfaceVisibility: ReactPropTypes.oneOf(['visible', 'hidden']),\n  backgroundColor: DeprecatedColorPropType,\n  borderColor: DeprecatedColorPropType,\n  borderTopColor: DeprecatedColorPropType,\n  borderRightColor: DeprecatedColorPropType,\n  borderBottomColor: DeprecatedColorPropType,\n  borderLeftColor: DeprecatedColorPropType,\n  borderStartColor: DeprecatedColorPropType,\n  borderEndColor: DeprecatedColorPropType,\n  borderRadius: ReactPropTypes.number,\n  borderTopLeftRadius: ReactPropTypes.number,\n  borderTopRightRadius: ReactPropTypes.number,\n  borderTopStartRadius: ReactPropTypes.number,\n  borderTopEndRadius: ReactPropTypes.number,\n  borderBottomLeftRadius: ReactPropTypes.number,\n  borderBottomRightRadius: ReactPropTypes.number,\n  borderBottomStartRadius: ReactPropTypes.number,\n  borderBottomEndRadius: ReactPropTypes.number,\n  borderStyle: ReactPropTypes.oneOf(['solid', 'dotted', 'dashed']),\n  borderWidth: ReactPropTypes.number,\n  borderTopWidth: ReactPropTypes.number,\n  borderRightWidth: ReactPropTypes.number,\n  borderBottomWidth: ReactPropTypes.number,\n  borderLeftWidth: ReactPropTypes.number,\n  opacity: ReactPropTypes.number,\n  /**\n   * (Android-only) Sets the elevation of a view, using Android's underlying\n   * [elevation API](https://developer.android.com/training/material/shadows-clipping.html#Elevation).\n   * This adds a drop shadow to the item and affects z-order for overlapping views.\n   * Only supported on Android 5.0+, has no effect on earlier versions.\n   * @platform android\n   */\n  elevation: ReactPropTypes.number,\n};\n\nmodule.exports = DeprecatedViewStylePropTypes;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nfunction deprecatedCreateStrictShapeTypeChecker(shapeTypes) {\n  function checkType(\n    isRequired,\n    props,\n    propName,\n    componentName,\n    location,\n    ...rest\n  ) {\n    if (!props[propName]) {\n      if (isRequired) {\n        invariant(\n          false,\n          `Required object \\`${propName}\\` was not specified in ` +\n            `\\`${componentName}\\`.`,\n        );\n      }\n      return;\n    }\n    const propValue = props[propName];\n    const propType = typeof propValue;\n    const locationName = location || '(unknown)';\n    if (propType !== 'object') {\n      invariant(\n        false,\n        `Invalid ${locationName} \\`${propName}\\` of type \\`${propType}\\` ` +\n          `supplied to \\`${componentName}\\`, expected \\`object\\`.`,\n      );\n    }\n    // We need to check all keys in case some are required but missing from\n    // props.\n    const allKeys = {...props[propName], ...shapeTypes};\n    for (const key in allKeys) {\n      const checker = shapeTypes[key];\n      if (!checker) {\n        invariant(\n          false,\n          `Invalid props.${propName} key \\`${key}\\` supplied to \\`${componentName}\\`.` +\n            '\\nBad object: ' +\n            JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +\n            JSON.stringify(Object.keys(shapeTypes), null, '  '),\n        );\n      }\n      const error = checker(propValue, key, componentName, location, ...rest);\n      if (error) {\n        invariant(\n          false,\n          error.message +\n            '\\nBad object: ' +\n            JSON.stringify(props[propName], null, '  '),\n        );\n      }\n    }\n  }\n  function chainedCheckType(props, propName, componentName, location, ...rest) {\n    return checkType(false, props, propName, componentName, location, ...rest);\n  }\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nmodule.exports = deprecatedCreateStrictShapeTypeChecker;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nmodule.exports = {\n  get ColorPropType() {\n    return require('./DeprecatedColorPropType');\n  },\n  get EdgeInsetsPropType() {\n    return require('./DeprecatedEdgeInsetsPropType');\n  },\n  get ImagePropTypes() {\n    return require('./DeprecatedImagePropType');\n  },\n  get PointPropType() {\n    return require('./DeprecatedPointPropType');\n  },\n  get TextInputPropTypes() {\n    return require('./DeprecatedTextInputPropTypes');\n  },\n  get TextPropTypes() {\n    return require('./DeprecatedTextPropTypes');\n  },\n  get ViewPropTypes() {\n    return require('./DeprecatedViewPropTypes');\n  },\n};\n","/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n\"use strict\";\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  if (!(obj instanceof Object && !Array.isArray(obj))) {\n    throw new Error('keyMirror(...): Argument must be an object.');\n  }\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["hue2rgb","p","q","t","hslToRgb","h","s","l","r","g","b","Math","round","cachedMatchers","NUMBER","PERCENTAGE","call","args","join","callWithSlashSeparator","slice","length","commaSeparatedCall","parse255","str","int","parseInt","parse360","parseFloat","parse1","num","parsePercentage","module","exports","color","match","matchers","undefined","rgb","RegExp","rgba","hsl","hsla","hwb","hex3","hex4","hex6","hex8","getMatchers","exec","colorFromKeyword","name","normalizeKeyword","w","gray","red","green","blue","hwbToRgb","WIDEVINE","PLAYREADY","CLEARKEY","FAIRPLAY","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","SRT","TTML","VTT","styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","isNaN","Error","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","options","NativeModules","VideoManager","findNodeHandle","_root","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","audioOnly","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","_onGetLicense","drm","getLicense","Function","data","spcBase64","getLicenseOverride","contentId","licenseUrl","Promise","resolve","then","result","setLicenseResult","setLicenseError","catch","error","getViewManagerConfig","viewManagerName","UIManager","poster","nativeProps","this","x","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","resolveAssetSource","shouldCache","__packager_asset","uri","console","warn","nativeResizeMode","isNetwork","isAsset","RCTVideoInstance","VideoResizeMode","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","assign","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","onGetLicense","posterStyle","absoluteFillObject","posterResizeMode","View","RCTVideo","ref","absoluteFill","Image","Component","propTypes","filter","PropTypes","oneOf","FilterType","filterEnabled","bool","object","oneOfType","number","func","shape","string","DRMType","licenseServer","base64Certificate","certificateUrl","minLoadRetryCount","maxBitRate","ImagePropTypes","repeat","automaticallyWaitsToMinimizeStalling","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","TextTrackType","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","preferredForwardBufferDuration","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","ViewPropTypes","requireNativeComponent","nativeOnly","keyMirror","normalizeColor","colorPropType","propName","componentName","location","propFullName","ColorPropType","bind","DeprecatedEdgeInsetsPropType","top","left","bottom","right","DeprecatedImageSourcePropType","DeprecatedImageStylePropTypes","DeprecatedStyleSheetPropType","defaultSource","width","height","scale","accessible","accessibilityLabel","node","blurRadius","capInsets","resizeMethod","testID","onLayout","onPartialLoad","onLoadEnd","ImageURISourcePropType","bundle","method","objectOf","body","cache","ImageSourcePropType","DeprecatedColorPropType","DeprecatedLayoutPropTypes","DeprecatedShadowPropTypesIOS","DeprecatedTransformPropTypes","ReactPropTypes","ImageStylePropTypes","backfaceVisibility","backgroundColor","borderColor","borderWidth","borderRadius","tintColor","opacity","overlayColor","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","LayoutPropTypes","display","start","end","minWidth","maxWidth","minHeight","maxHeight","margin","marginVertical","marginHorizontal","marginTop","marginBottom","marginLeft","marginRight","marginStart","marginEnd","padding","paddingVertical","paddingHorizontal","paddingTop","paddingBottom","paddingLeft","paddingRight","paddingStart","paddingEnd","borderTopWidth","borderStartWidth","borderEndWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","position","flexDirection","flexWrap","justifyContent","alignItems","alignSelf","alignContent","flex","flexGrow","flexShrink","flexBasis","aspectRatio","zIndex","direction","PointPropType","y","shadowColor","shadowOffset","shadowOpacity","shadowRadius","deprecatedCreateStrictShapeTypeChecker","flattenStyle","Array","isArray","i","styleLength","computedStyle","key","shapePropType","rest","newProps","DeprecatedTextPropTypes","DeprecatedViewPropTypes","DataDetectorTypes","autoCapitalize","autoCompleteType","autoCorrect","spellCheck","autoFocus","allowFontScaling","maxFontSizeMultiplier","editable","keyboardType","keyboardAppearance","returnKeyType","returnKeyLabel","maxLength","numberOfLines","disableFullscreenUI","enablesReturnKeyAutomatically","multiline","textBreakStrategy","onBlur","onFocus","onChange","onChangeText","onContentSizeChange","onTextInput","onEndEditing","onSelectionChange","onSubmitEditing","onKeyPress","onScroll","placeholder","placeholderTextColor","scrollEnabled","secureTextEntry","selectionColor","selection","defaultValue","clearButtonMode","clearTextOnFocus","selectTextOnFocus","blurOnSubmit","underlineColorAndroid","inlineImageLeft","inlineImagePadding","rejectResponderTermination","dataDetectorTypes","caretHidden","contextMenuHidden","inputAccessoryViewID","textContentType","showSoftInputOnFocus","stylePropType","ellipsizeMode","onPress","onLongPress","pressRetentionOffset","selectable","suppressHighlighting","nativeID","adjustsFontSizeToFit","minimumFontScale","disabled","dataDetectorType","DeprecatedViewStylePropTypes","DeprecatedTextStylePropTypes","fontFamily","fontSize","fontStyle","fontWeight","fontVariant","textShadowOffset","textShadowRadius","textShadowColor","letterSpacing","lineHeight","textAlign","textAlignVertical","includeFontPadding","textDecorationLine","textDecorationStyle","textDecorationColor","textTransform","writingDirection","transform","perspective","rotate","rotateX","rotateY","rotateZ","skewX","skewY","transformMatrix","decomposedMatrix","deprecatedPropType","propType","explanation","DeprecatedAccessibilityRoles","accessibilityHint","accessibilityActions","accessibilityIgnoresInvertColors","accessibilityRole","accessibilityState","accessibilityValue","accessibilityLiveRegion","importantForAccessibility","accessibilityViewIsModal","accessibilityElementsHidden","onAccessibilityAction","onAccessibilityTap","onMagicTap","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","onStartShouldSetResponderCapture","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","hitSlop","pointerEvents","removeClippedSubviews","renderToHardwareTextureAndroid","shouldRasterizeIOS","collapsable","needsOffscreenAlphaCompositing","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderStartColor","borderEndColor","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStyle","elevation","invariant","shapeTypes","checkType","propValue","allKeys","checker","message","chainedCheckType","EdgeInsetsPropType","TextInputPropTypes","TextPropTypes","ret","hasOwnProperty","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","secret","err","getShim","array","bigint","symbol","any","element","elementType","instanceOf","exact","checkPropTypes"],"sourceRoot":""}